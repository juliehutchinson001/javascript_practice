{"version":3,"sources":["index.js"],"names":["deleteTaskFromDOM","task","remove","deleteTaskFromAsana","token","getToken","url","taskId","fetch","method","headers","Authorization","then","resp","json","console","log","data","status","catch","error","addDeleteEvent","delButton","addEventListener","taskToDel","event","target","parentNode","id","editTaskInApi","newTaskName","newObjectTask","name","body","JSON","stringify","res","response","editTaskInDOM","taskToEdit","document","getElementById","inputOfTask","createElement","setAttribute","appendChild","key","value","innerHTML","style","display","insertTaskToDOM","asanaTask","ulTasks","oneLiTask","deleteButton","classList","add","createTextNode","parseApiResponse","index","parseInt","taskName","getApiTasks","length","alert","sendNewTaskToApi","newTask","main","newTaskBtn","inputNewTask","inputText","allTaskBtn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,oBAAoB,SAApBA,iBAAoB;AAAA,SAAQC,KAAKC,MAAL,EAAR;AAAA,CAA1B;;AAEA,IAAMC,sBAAsB,SAAtBA,mBAAsB,SAAU;AACpC,MAAMC,QAAQC,UAAd;AACA,MAAMC,+CAA6CC,MAAnD;AACAC,QAAMF,GAAN,EAAW;AACTG,YAAQ,QADC;AAETC,aAAS;AACPC,iCAAyBP;AADlB;AAFA,GAAX,EAMGQ,IANH,CAMQ;AAAA,WAAQC,KAAKC,IAAL,EAAR;AAAA,GANR,EAOGF,IAPH,CAOQ,gBAAQ;AACZG,YAAQC,GAAR,CAAYC,KAAKC,MAAjB;AACD,GATH,EAUGC,KAVH,CAUS,UAASC,KAAT,EAAgB;AACrBL,YAAQC,GAAR,CAAY,mCAAZ;AACD,GAZH;AAaD,CAhBD;;AAkBA,IAAMK,iBAAiB,SAAjBA,cAAiB,YAAa;AAClCC,YAAUC,gBAAV,CAA2B,OAA3B,EAAoC,iBAAS;AAC3C,QAAMC,YAAYC,MAAMC,MAAN,CAAaC,UAA/B;AACA3B,sBAAkBwB,SAAlB;AACArB,wBAAoBqB,UAAUI,EAA9B;AACD,GAJD;AAKD,CAND;;AAQA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACtB,MAAD,EAASuB,WAAT,EAAyB;AAC7C,MAAIC,gBAAgB,EAAEd,MAAM,EAAEe,MAAMF,WAAR,EAAR,EAApB;AACA,MAAM1B,QAAQC,UAAd;AACA,MAAMC,+CAA6CC,MAAnD;;AAEAC,QAAMF,GAAN,EAAW;AACTG,YAAQ,KADC;AAETwB,UAAMC,KAAKC,SAAL,CAAeJ,aAAf,CAFG;AAGTrB,aAAS;AACPC,iCAAyBP,KADlB;AAEP,sBAAgB;AAFT;AAHA,GAAX,EAQGQ,IARH,CAQQ;AAAA,WAAOwB,IAAItB,IAAJ,EAAP;AAAA,GARR,EASGK,KATH,CASS,UAASC,KAAT,EAAgB;AACrBL,YAAQC,GAAR,CAAY,mCAAZ;AACD,GAXH,EAYGJ,IAZH,CAYQ;AAAA,WAAYG,QAAQC,GAAR,CAAY,UAAZ,EAAwBqB,QAAxB,CAAZ;AAAA,GAZR;AAaD,CAlBD;;AAoBA,IAAMC,gBAAgB,SAAhBA,aAAgB,SAAU;AAC9B,MAAMC,aAAaC,SAASC,cAAT,CAAwBlC,MAAxB,CAAnB;;AAEA,MAAMmC,cAAcF,SAASG,aAAT,CAAuB,OAAvB,CAApB;;AAEAD,cAAYE,YAAZ,CAAyB,aAAzB,EAAwC,kBAAxC;;AAEAL,aAAWM,WAAX,CAAuBH,WAAvB;;AAEAA,cAAYnB,gBAAZ,CAA6B,SAA7B,EAAwC,iBAAS;AAC/C,QAAIE,MAAMqB,GAAN,KAAc,OAAlB,EAA2B;AACzB,UAAMhB,cAAcY,YAAYK,KAAhC;AACAR,iBAAWS,SAAX,GAAuBlB,WAAvB;AACAY,kBAAYO,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;AACArB,oBAActB,MAAd,EAAsBgC,WAAWS,SAAjC;AACD;AACF,GAPD;AAQD,CAjBD;;AAmBA,IAAMG,kBAAkB,SAAlBA,eAAkB,CAACC,SAAD,EAAY7C,MAAZ,EAAuB;AAC7C,MAAM8C,UAAUb,SAASC,cAAT,CAAwB,YAAxB,CAAhB;;AAEA;AACA,MAAMa,YAAYd,SAASG,aAAT,CAAuB,IAAvB,CAAlB;AACA,MAAMY,eAAef,SAASG,aAAT,CAAuB,QAAvB,CAArB;;AAEA;AACAW,YAAUV,YAAV,CAAuB,IAAvB,EAA6BrC,MAA7B;AACAgD,eAAaC,SAAb,CAAuBC,GAAvB,CAA2B,aAA3B;;AAEA;AACAH,YAAUT,WAAV,CAAsBL,SAASkB,cAAT,CAAwBN,SAAxB,CAAtB;AACAG,eAAaV,WAAb,CAAyBL,SAASkB,cAAT,CAAwB,QAAxB,CAAzB;;AAEA;AACAL,UAAQR,WAAR,CAAoBS,SAApB;AACAA,YAAUT,WAAV,CAAsBU,YAAtB;;AAEAlC,iBAAekC,YAAf;;AAEAD,YAAU/B,gBAAV,CAA2B,OAA3B,EAAoC,YAAM;AACxCe,kBAAc/B,MAAd;AACAsB,kBAActB,MAAd;AACD,GAHD;AAID,CAzBD;;AA2BA,IAAMoD,mBAAmB,SAAnBA,gBAAmB,OAAQ;AAC/B,OAAK,IAAIC,KAAT,IAAkB3C,IAAlB,EAAwB;AACtB2C,YAAQC,SAASD,KAAT,EAAgB,EAAhB,CAAR;AACA,QAAME,WAAW7C,KAAK2C,KAAL,EAAY5B,IAA7B;AACA,QAAMzB,SAASU,KAAK2C,KAAL,EAAYhC,EAA3B;AACA;AACAuB,oBAAgBW,QAAhB,EAA0BvD,MAA1B;AACD;AACF,CARD;;AAUA,IAAMwD,cAAc,SAAdA,WAAc,GAAM;AACxB,MAAM3D,QAAQC,UAAd;AACA,MAAMC,MACJ,8EADF;AAEAE,QAAMF,GAAN,EAAW;AACTI,aAAS;AACPC,iCAAyBP;AADlB;AADA,GAAX,EAKGQ,IALH,CAKQ;AAAA,WAAQC,KAAKC,IAAL,EAAR;AAAA,GALR,EAMGF,IANH,CAMQ,gBAAQ;AACZK,SAAKA,IAAL,CAAU+C,MAAV,GAAmBL,iBAAiB1C,KAAKA,IAAtB,CAAnB,GAAiDgD,MAAM,gBAAN,CAAjD;AACD,GARH,EASG9C,KATH,CASS,UAASC,KAAT,EAAgB;AACrBL,YAAQC,GAAR,CAAY,mCAAZ;AACD,GAXH;AAYD,CAhBD;;AAkBA,IAAMkD,mBAAmB,SAAnBA,gBAAmB,UAAW;AAClC,MAAInC,gBAAgB,EAAEd,MAAM,EAAEe,MAAMmC,OAAR,EAAR,EAApB;AACA;;AAEA,MAAM/D,QAAQC,UAAd;AACA,MAAMC,MAAM,8DAAZ;;AAEAE,QAAMF,GAAN,EAAW;AACTG,YAAQ,MADC,EACO;AAChBwB,UAAMC,KAAKC,SAAL,CAAeJ,aAAf,CAFG;AAGTrB,aAAS;AACPC,iCAAyBP,KADlB;AAEP,sBAAgB;AAFT;AAHA,GAAX,EAQGQ,IARH,CAQQ;AAAA,WAAOwB,IAAItB,IAAJ,EAAP;AAAA,GARR,EASGK,KATH,CASS,UAASC,KAAT,EAAgB;AACrBL,YAAQC,GAAR,CAAY,mCAAZ;AACD,GAXH,EAYGJ,IAZH,CAYQ;AAAA,WAAYG,QAAQC,GAAR,CAAY,UAAZ,EAAwBqB,QAAxB,CAAZ;AAAA,GAZR;AAaD,CApBD;;AAsBA,IAAMhC,WAAW,SAAXA,QAAW;AAAA,SAAM,oCAAN;AAAA,CAAjB;;AAEA,IAAM+D,OAAO,SAAPA,IAAO,GAAM;AACjB,MAAMC,aAAa7B,SAASC,cAAT,CAAwB,iBAAxB,CAAnB;AACA,MAAM6B,eAAe9B,SAASC,cAAT,CAAwB,gBAAxB,CAArB;AACA4B,aAAW9C,gBAAX,CAA4B,OAA5B,EAAqC,YAAM;AACzC,QAAMgD,YAAYD,aAAavB,KAA/B;;AAEA,QAAIwB,cAAc,GAAlB,EAAuB;AACrBN,YAAM,4BAAN;AACD,KAFD,MAEO;AACLC,uBAAiBK,SAAjB;AACD;AACF,GARD;;AAUA,MAAMC,aAAahC,SAASC,cAAT,CAAwB,eAAxB,CAAnB;AACA+B,aAAWjD,gBAAX,CAA4B,OAA5B,EAAqCwC,WAArC;AACD,CAfD;;AAiBAK","file":"index.map","sourceRoot":"../src/js","sourcesContent":["const deleteTaskFromDOM = task => task.remove();\n\nconst deleteTaskFromAsana = taskId => {\n  const token = getToken();\n  const url = `https://app.asana.com/api/1.0/tasks/${taskId}`;\n  fetch(url, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data.status);\n    })\n    .catch(function(error) {\n      console.log(\"error found, fix it and try again\");\n    });\n};\n\nconst addDeleteEvent = delButton => {\n  delButton.addEventListener(\"click\", event => {\n    const taskToDel = event.target.parentNode;\n    deleteTaskFromDOM(taskToDel);\n    deleteTaskFromAsana(taskToDel.id);\n  });\n};\n\nconst editTaskInApi = (taskId, newTaskName) => {\n  let newObjectTask = { data: { name: newTaskName } };\n  const token = getToken();\n  const url = `https://app.asana.com/api/1.0/tasks/${taskId}`;\n\n  fetch(url, {\n    method: \"PUT\",\n    body: JSON.stringify(newObjectTask),\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(res => res.json())\n    .catch(function(error) {\n      console.log(\"error found, fix it and try again\");\n    })\n    .then(response => console.log(\"Success:\", response));\n};\n\nconst editTaskInDOM = taskId => {\n  const taskToEdit = document.getElementById(taskId);\n\n  const inputOfTask = document.createElement(\"input\");\n\n  inputOfTask.setAttribute(\"placeholder\", \"new name of task\");\n\n  taskToEdit.appendChild(inputOfTask);\n\n  inputOfTask.addEventListener(\"keydown\", event => {\n    if (event.key === \"Enter\") {\n      const newTaskName = inputOfTask.value;\n      taskToEdit.innerHTML = newTaskName;\n      inputOfTask.style.display = \"none\";\n      editTaskInApi(taskId, taskToEdit.innerHTML);\n    }\n  });\n};\n\nconst insertTaskToDOM = (asanaTask, taskId) => {\n  const ulTasks = document.getElementById(\"task-asana\");\n\n  // Create elements\n  const oneLiTask = document.createElement(\"li\");\n  const deleteButton = document.createElement(\"button\");\n\n  // Set attributes to elements\n  oneLiTask.setAttribute(\"id\", taskId);\n  deleteButton.classList.add(\"delete-task\");\n\n  // Appending text to elements\n  oneLiTask.appendChild(document.createTextNode(asanaTask));\n  deleteButton.appendChild(document.createTextNode(\"Delete\"));\n\n  // Appending elements to parents in the DOM\n  ulTasks.appendChild(oneLiTask);\n  oneLiTask.appendChild(deleteButton);\n\n  addDeleteEvent(deleteButton);\n\n  oneLiTask.addEventListener(\"click\", () => {\n    editTaskInDOM(taskId);\n    editTaskInApi(taskId);\n  });\n};\n\nconst parseApiResponse = data => {\n  for (let index in data) {\n    index = parseInt(index, 10);\n    const taskName = data[index].name;\n    const taskId = data[index].id;\n    // insertToDOM\n    insertTaskToDOM(taskName, taskId);\n  }\n};\n\nconst getApiTasks = () => {\n  const token = getToken();\n  const url =\n    \"https://app.asana.com/api/1.0/projects/670284833006984/tasks?opt_fields=name\";\n  fetch(url, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(resp => resp.json())\n    .then(data => {\n      data.data.length ? parseApiResponse(data.data) : alert(\"Sorry no tasks\");\n    })\n    .catch(function(error) {\n      console.log(\"error found, fix it and try again\");\n    });\n};\n\nconst sendNewTaskToApi = newTask => {\n  let newObjectTask = { data: { name: newTask } };\n  // let newObjectTask = { data: { name: 'Hello, world!' } };\n\n  const token = getToken();\n  const url = \"https://app.asana.com/api/1.0/tasks?projects=670284833006984\";\n\n  fetch(url, {\n    method: \"POST\", // or 'PUT'\n    body: JSON.stringify(newObjectTask),\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(res => res.json())\n    .catch(function(error) {\n      console.log(\"error found, fix it and try again\");\n    })\n    .then(response => console.log(\"Success:\", response));\n};\n\nconst getToken = () => \"0/eb7c3fec7263aaad65c6f6553537fa66\";\n\nconst main = () => {\n  const newTaskBtn = document.getElementById(\"create-new-task\");\n  const inputNewTask = document.getElementById(\"input-new-task\");\n  newTaskBtn.addEventListener(\"click\", () => {\n    const inputText = inputNewTask.value;\n\n    if (inputText === \" \") {\n      alert(\"enter a valid task please!\");\n    } else {\n      sendNewTaskToApi(inputText);\n    }\n  });\n\n  const allTaskBtn = document.getElementById(\"get-all-tasks\");\n  allTaskBtn.addEventListener(\"click\", getApiTasks);\n};\n\nmain();\n"]}